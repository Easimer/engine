include "base.fbs";

// Engine Networking schemas

namespace Schemas.Networking;

table StringIdentifier {
	id : string;
}

table EntityUpdate {
	edict_id : ulong (key);
	pos : Vector3;
	rot : Vector3;
	model : string;
	parent : ulong;
	last_update : float;
}

enum MessageType : long {
	NONE = 0,

	// Client connection
	CONNECT,		// Connect request
	CONNECT_ACK,	// Connect Acknowledgement
	CONNECT_NAK,	// Connect Negative Acknowledgement
	DISCONNECT,		// Disconnect request

	// Local network discovery
	DISCOVERY_PROBE,	// Server discovery probe
	DISCOVERY_RESPONSE, // Server discovery response

	ENTITY_UPDATE, // Update entity
	CLIENT_UPDATE, // Client update
}

enum ConnectionNakReason : long {
	RESERVED = 0,
	ALREADY_CONNECTED = 1,
	NAME_UNAVAILABLE = 2,
	FULL = 3,
}

table ConnectData {
	// CONNECT
	username : string;
	// CONNECT_ACK
	conn_id : ulong;
	// CONNECT_NAK
	nak_reason : ConnectionNakReason;
}

union MessageData {
	ConnectData, EntityUpdate
}

table MessageHeader {
	type : MessageType;
	data : MessageData;
}

root_type MessageHeader;
